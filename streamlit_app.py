import streamlit as st import pandas as pd

st.title("‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ö‡∏≤‡∏Ñ‡∏≤‡∏£‡πà‡∏≤‡πÅ‡∏ö‡∏ö 4 ‡πÑ‡∏°‡πâ (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏ö‡πÑ‡∏î‡πâ)")

base_unit = st.number_input("‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏ö‡∏≤‡∏ó)", min_value=1, value=100)

‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≠‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô session_state

if "round_results" not in st.session_state: st.session_state.round_results = []

strategies = { "Fibonacci": [1, 2, 4, 8], "Martingale": [1, 2, 4, 8], "Paroli": [1, 2, 4, 0], "Labouchere": [1, 2, 3, 4], "Oscar's Grind": [1, 1, 2, 2] }

st.subheader("üì• ‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ (0 = ‡πÅ‡∏û‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î, 1‚Äì4 = ‡∏ä‡∏ô‡∏∞‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà)") current_result = st.number_input("‡∏ú‡∏•‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ", min_value=0, max_value=4, value=1, step=1)

if st.button("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà"): st.session_state.round_results.append(current_result)

if st.button("üóë ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"): st.session_state.round_results.clear()

‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏π‡∏ï‡∏£

summary_data = [] tabs = st.tabs(list(strategies.keys()))

for strat_name, pattern in strategies.items(): data = [] for idx, win_at in enumerate(st.session_state.round_results): bets = [base_unit * x for x in pattern] if win_at == 0 or win_at > 4: total = sum(bets) profit = -total label = "‡πÅ‡∏û‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" else: total = sum(bets[:win_at]) profit = bets[win_at - 1] label = f"‡∏ä‡∏ô‡∏∞‡πÑ‡∏°‡πâ {win_at}" data.append({ "‡∏£‡∏≠‡∏ö": idx + 1, "‡∏ú‡∏•‡∏£‡∏≠‡∏ö": label, "‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏£‡∏ß‡∏°": total, "‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô": profit }) summary_data.append({ "‡∏™‡∏π‡∏ï‡∏£": strat_name, "‡∏£‡∏≠‡∏ö": idx + 1, "‡∏Å‡∏≥‡πÑ‡∏£": profit })

df = pd.DataFrame(data)
if not df.empty:
    df.loc["‡∏£‡∏ß‡∏°"] = ["", "", df["‡πÄ‡∏î‡∏¥‡∏°‡∏û‡∏±‡∏ô‡∏£‡∏ß‡∏°"].sum(), df["‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô"].sum()]
with tabs[list(strategies.keys()).index(strat_name)]:
    st.dataframe(df, use_container_width=True)

‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏™‡∏π‡∏ï‡∏£

if summary_data: st.subheader("üìä ‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏≥‡πÑ‡∏£‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏π‡∏ï‡∏£") df_summary = pd.DataFrame(summary_data) df_summary = df_summary.groupby("‡∏™‡∏π‡∏ï‡∏£").agg({"‡∏Å‡∏≥‡πÑ‡∏£": ["count", "sum", "mean"]}).reset_index() df_summary.columns = ["‡∏™‡∏π‡∏ï‡∏£", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≠‡∏ö", "‡∏Å‡∏≥‡πÑ‡∏£‡∏£‡∏ß‡∏°", "‡∏Å‡∏≥‡πÑ‡∏£‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢"] st.dataframe(df_summary, use_container_width=True) else: st.info("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ú‡∏•‡∏£‡∏≠‡∏ö‡πÅ‡∏£‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà")

